name: Develop

on:
  push:
    branches:
      - develop

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    container:
      image: golang:1.13
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: vendor
          key: ${{ runner.os }}-go-${{ hashFiles(format('{0}{1}', github.workspace, '/go.sum')) }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install Dependencies
        run: |
          apt-get update -y && apt-get install -y build-essential git curl
          make deps
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
      - name: Lint code
        run: |
          make vet
#          make build-server
      - name: Run tests
        run: |
          export GIT_BRANCH=$(echo $GITHUB_REF | sed -e 's,.*/\(.*\),\1,')
          ./cc-test-reporter before-build
          make test-coverage
          ./cc-test-reporter format-coverage --input-type gocov --prefix github.com/enseadaio/enseada ./coverage/profile.out
          ./cc-test-reporter upload-coverage
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          GIT_COMMIT_SHA: ${{ github.sha }}
  protocols-check:
    runs-on: ubuntu-latest
    container:
      image: uber/prototool:1.8.1
    steps:
      - uses: actions/checkout@v1
      - name: Check protocols
        run: |
          prototool files ./rpc
          prototool compile ./rpc
          prototool lint ./rpc
#          prototool break check ./rpc --git-branch master
  build:
    runs-on: ubuntu-latest
    needs: [lint-and-test, protocols-check]
    steps:
      - uses: actions/checkout@v1
      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
      - name: Build the Docker image
        run: |
          docker pull enseada/enseada:edge || true
          docker build . --file Dockerfile --tag enseada/enseada:edge
          docker push enseada/enseada:edge
