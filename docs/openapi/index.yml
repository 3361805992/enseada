openapi: 3.0.1
info:
  title: Enseada
  description: A Cloud native multi-package registry
  x-logo:
    url: https://enseada.io/images/enseada-logo.png
    backgroundColor: "#FFFFFF"
    altText: "Enseada logo"
  contact:
    email: enseada@pm.me
    url: https://enseada.io
  license:
    name: MPL 2.0
    url: https://opensource.org/licenses/MPL-2.0
  version: 0.1.0
externalDocs:
  description: Find out more about Enseada
  url: https://enseada.io
tags:
  - name: docker
    description: Docker V2 registry endpoints
  - name: monitoring
    description: Monitoring and observability endpoints
  - name: users
    description: User management endpoints
paths:
  /api/v1beta1/users/me:
    get:
      tags:
        - users
      summary: Fetches information about the currently authenticated user
      operationId: user::me
      security:
        - oauth:
            - profile
      responses:
        200:
          description: Current user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  /api/v1beta1/users/register:
    post:
      tags:
        - users
      summary: Register a new user
      operationId: user::register
      security:
        - oauth:
            - users:manage
      requestBody:
        required: true
        description: New user login information
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationForm'
      responses:
        200:
          description: New user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        409:
          description: A user with the given username already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  /health:
    get:
      tags:
        - monitoring
      summary: Get the server health status
      operationId: health::get
      responses:
        200:
          description: Server is active
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        503:
          description: Server is not active
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
components:
  schemas:
    $ref: './schemas/_index.yml'
  securitySchemes:
    oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /oauth/authorize
          tokenUrl: /oauth/token
          scopes:
            profile: access user profile information
            users:read: read-only access to registered users
            users:manage: read-write access to registered users
