// Copyright 2019-2020 Enseada authors
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

syntax = "proto3";

package auth.v1beta1;

option csharp_namespace = "Auth.V1Beta1";
option go_package = "authv1beta1";
option java_multiple_files = true;
option java_outer_classname = "OAuthClientsApiProto";
option java_package = "io.enseada.auth.v1beta1";
option objc_class_prefix = "AXX";
option php_namespace = "Auth\\V1Beta1";

import "auth/v1beta1/o_auth_client.proto";

// RPC API to manage OAuth clients.
service OAuthClientsAPI {
  // List all available OAuth clients.
  rpc ListClients(ListClientsRequest) returns (ListClientsResponse);
  // Get a single OAuth client.
  rpc GetClient(GetClientRequest) returns (GetClientResponse);
  // Add a new OAuth clients.
  rpc CreateClient(CreateClientRequest) returns (CreateClientResponse);
  // Update an OAuth client.
  rpc UpdateClient(UpdateClientRequest) returns (UpdateClientResponse);
  // Delete an OAuth clients.
  rpc DeleteClient(DeleteClientRequest) returns (DeleteClientResponse);
}

// Request body to list all available OAuth clients.
message ListClientsRequest {}

// Response body with a list of all available OAuth clients.
message ListClientsResponse {
  repeated auth.v1beta1.OAuthClient clients = 1;
}

// Request body to get a single OAuth clients.
message GetClientRequest {
  // The id of the client to fetch. Required.
  string id = 1;
}

// Response body with a single OAuth client.
message GetClientResponse {
  auth.v1beta1.OAuthClient client = 1;
}

// Request body to create a new OAuth client.
message CreateClientRequest {
  // The client to create. Required.
  auth.v1beta1.OAuthClient client = 1;
  // Client secret. Optional for public clients.
  string secret = 2;
}

// Response body with the newly created OAuth client.
message CreateClientResponse {
  auth.v1beta1.OAuthClient client = 1;
}

// Request body to update an OAuth client.
message UpdateClientRequest {
  // The client to update. Required.
  auth.v1beta1.OAuthClient client = 1;
}

// Response body with the updated OAuth client.
message UpdateClientResponse {
  auth.v1beta1.OAuthClient client = 1;
}

// Request body to delete an OAuth client.
message DeleteClientRequest {
  // The client to delete. Required.
  string id = 1;
}

// Response body with the deleted OAuth client.
message DeleteClientResponse {
  auth.v1beta1.OAuthClient client = 1;
}
